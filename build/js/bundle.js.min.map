{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","console","log","target","attributes","href","value","scrollIntoView","behavior","crearGaleria","galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","overlay","cerrarImagen","textContent","body"],"mappings":"AAMA,SAAAA,iBAEA,MAAAC,EAAAC,SAAAC,cAAA,WAEA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eAEAL,EAAAM,UAAAC,OAAA,QAGAP,EAAAM,UAAAE,IAAA,WAMAC,QAAAR,SAAAC,cAAA,oBAGA,SAAAQ,YACAT,SAAAU,iBAAA,2BAGAC,SAAA,SAAAC,GAEAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBAEAC,QAAAC,IAAAH,EAAAI,OAAAC,WAAAC,KAAAC,OAEArB,SAAAC,cAAAa,EAAAI,OAAAC,WAAAC,KAAAC,OAEAC,eAAA,CACAC,SAAA,iBClCA,SAAAC,eACA,MAAAC,EAAAzB,SAAAC,cAAA,qBAEA,IAAA,IAAAyB,EAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,MAAAC,EAAA3B,SAAA4B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SACAC,EAAAG,QAAAC,SAAAL,EAEAC,EAAAK,QAAAC,cAEA,MAAAC,EAAAlC,SAAA4B,cAAA,MACAM,EAAAC,YAAAR,GAEAF,EAAAU,YAAAD,IAKA,SAAAD,cAAAnB,GAKA,MAAAsB,EAAAC,SAAAvB,EAAAI,OAAAY,QAAAC,UAIAJ,EAAA3B,SAAA4B,cAAA,OACAD,EAAAE,IAAA,oBAAAO,SAIA,MAAAE,EAAAtC,SAAA4B,cAAA,OACAU,EAAAH,YAAAR,GACAW,EAAAjC,UAAAE,IAAA,WAGA,MAAAgC,EAAAvC,SAAA4B,cAAA,KACAW,EAAAC,YAAA,IACAD,EAAAlC,UAAAE,IAAA,cAGA+B,EAAAN,QAAA,WACAM,EAAAhC,UAIAiC,EAAAP,QAAA,WACAM,EAAAhC,UAGAgC,EAAAH,YAAAI,GAGA,MAAAE,EAAAzC,SAAAC,cAAA,QACAwC,EAAAN,YAAAG,GACAG,EAAApC,UAAAE,IAAA,cD7DAP,SAAAa,iBAAA,oBAAA,WACAJ,YAEAX,oBCHAE,SAAAa,iBAAA,oBAAA,WACAW","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    scrollNav();\r\n\r\n    navegacionFija();\r\n});\r\n\r\nfunction navegacionFija() {\r\n    \r\n    const barra = document.querySelector('.header');\r\n    //Registrar el Intersection Observer\r\n    const observer = new IntersectionObserver( function(entries) { //entries nos va a dar la informacion del elemento a observar\r\n        if(entries[0].isIntersecting) {\r\n          // console.log('Elemento visible')\r\n          barra.classList.remove('fijo');\r\n        } else {\r\n            //console.log('Ya desaparecio')\r\n            barra.classList.add('fijo');\r\n        }\r\n        //console.log(entries[0]);//en la posicion 0 porque puede ser multiples elementos\r\n    });\r\n    \r\n    //Elemento a observar\r\n    observer.observe(document.querySelector('.sobre-festival'));\r\n}\r\n\r\nfunction scrollNav() {\r\n    const enlaces = document.querySelectorAll('.navegacion-principal a'); //como es mas de uno se utiliza el ALL\r\n    //console.log(enlaces);\r\n    //no PUEDE AGREGAR UN LISTENER A LOS ENLACES SE HACE POR CADA UNO Y POR ESO â†’\r\n    enlaces.forEach( function( enlace ) {\r\n        //console.log(enlace);\r\n        enlace.addEventListener('click', function(e) {//LE PASAMOS EL EVENTO {\r\n            e.preventDefault();\r\n\r\n            console.log(e.target.attributes.href.value); //NOS DICE A QUE ELEMENTO LE DIMOS CLICK\r\n            \r\n            const seccion = document.querySelector(e.target.attributes.href.value);\r\n\r\n            seccion.scrollIntoView( {\r\n                behavior: 'smooth', //hay dos tipos el recorrido normal y el rapido\r\n            });\r\n        });\r\n    });\r\n}","document.addEventListener('DOMContentLoaded', function() {\r\n    crearGaleria();\r\n\r\n});\r\n\r\nfunction crearGaleria() {\r\n      const galeria = document.querySelector('.galeria-imagenes');\r\n\r\n      for( let i = 1; i <= 12; i++) {\r\n            const imagen = document.createElement('IMG'); //RECORDAR QUE EN JAVASCRIPT SE PONE EN MAYUSCULA\r\n            imagen.src = `build/img/thumb/${i}.webp`;  /*SE ESCRIBEN CON LAS COMILLAS DOBLADAS*/\r\n            imagen.dataset.imagenId = i; //le agrega un atributo nuevo ala imagen\r\n            //Anadir la funcion de  mostrar imagen\r\n            imagen.onclick = mostrarImagen;\r\n\r\n            const lista = document.createElement('LI');\r\n            lista.appendChild(imagen);//EN EL LI AGREGO LA IMAGEN\r\n           //console.log(imagen); /*manda todas las imagenes a la consola*/\r\n            galeria.appendChild(lista);\r\n        \r\n        } //nuestras imagenes inician desde un 1 por lo tanto el for tambien\r\n}\r\n\r\nfunction mostrarImagen(e)/*le pasamos el evento*/  {\r\n    // console.log('Diste click en una imagen');\r\n     //console.log(e.target.dataset.imagenId); //NOS MUESTRA SOLO EL ID DE LA IMAGEN\r\n         //console.log(typeof e.target.dataset.imagenId); //type of nos dice que tipo de valor es, y es un string\r\n\r\n        const id = parseInt( e.target.dataset.imagenId);\r\n\r\n      // console.log(id); /*AHORA LO VAMOS A VER EN LA CONSOLA DE COLOR AZUL, SIGNIFICA QUE ES UN INT*/ \r\n        //GENERAR LA IMAGEN\r\n        const imagen = document.createElement('IMG'); \r\n        imagen.src = `build/img/grande/${id}.webp`;  /*SE ESCRIBEN CON LAS COMILLAS DOBLADAS*/\r\n      \r\n        //console.log(imagen);\r\n    \r\n        const overlay = document.createElement('DIV'); /*OVERLAY, VARIABLE QUE ES UN ELEMENTO POR ENCIMA DE TODO*/\r\n        overlay.appendChild(imagen);\r\n        overlay.classList.add('overlay');\r\n\r\n        //BOTON PARA CERRAR LA IMAGEN\r\n        const cerrarImagen = document.createElement('P');\r\n        cerrarImagen.textContent = 'X';\r\n        cerrarImagen.classList.add('btn-cerrar');\r\n\r\n        //CUANDO SE DA CLICK, CERRAR LA IMAGEN\r\n        overlay.onclick = function() {\r\n            overlay.remove();\r\n        }\r\n\r\n        //CUANDO SE PRECIONA SE CIERRA LA IMAGEN\r\n        cerrarImagen.onclick = function() {\r\n            overlay.remove(); //ESTO VA A ELIMINAR EL DIV QUE CONTIENE LA IMAGEN Y EL CERRARIMAGEN\r\n        }\r\n\r\n        overlay.appendChild(cerrarImagen);\r\n\r\n        //MOSTRAR EN EL HTML\r\n        const body = document.querySelector('body');\r\n        body.appendChild(overlay);\r\n        body.classList.add('fijar-body'); /*LA FUNCION SE ENCUENTRA EN GLOBALES DE SCSS*/ \r\n    \r\n    \r\n    }\r\n"]}